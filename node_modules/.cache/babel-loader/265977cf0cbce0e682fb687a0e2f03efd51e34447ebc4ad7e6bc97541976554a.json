{"ast":null,"code":"var _jsxFileName = \"/Users/palomasalseda/Desktop/cs1300/project6-development/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from \"react\";\nimport movieData from \"./assets/tiles.json\";\nimport { Time } from './Time';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  bakeryData.forEach(item => {\n    item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n  });\n  const [toWatch, setToWatch] = useState([0]);\n  const items = toWatch.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [item.name, \" : \", item.time, \" minutes\"]\n  }, item.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n  const totalTime = toWatch.reduce((partialSum, item) => partialSum + item.time, 0);\n  const addTime = item => {\n    const existingItem = toWatch.find(i => i.name === item.name);\n    if (existingItem) {\n      setToWatch(toWatch.map(oldItem => oldItem === existingItem ? {\n        ...oldItem,\n        count: existingItem.count + 1\n      } : {\n        ...oldItem\n      }));\n    } else {\n      setToWatch(oldTime => [...oldTime, item]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Curated Movie Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bakery_items_container\",\n        children: movieData.map((item, index) =>\n        /*#__PURE__*/\n        // TODO: map bakeryData to BakeryItem components\n        _jsxDEV(Time, {\n          data: item,\n          id: index,\n          onAddToWatch: addTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this) // replace with BakeryItem component\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Movies to Watch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [totalTime, \" of movie to watch!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a6Bhs9CXWKqFTcEP31TJjWa+aqo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","movieData","Time","App","bakeryData","forEach","item","image","process","env","PUBLIC_URL","toWatch","setToWatch","items","map","name","time","id","totalTime","reduce","partialSum","addTime","existingItem","find","i","oldItem","count","oldTime","index"],"sources":["/Users/palomasalseda/Desktop/cs1300/project6-development/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from \"react\";\nimport movieData from \"./assets/tiles.json\"\nimport { Time } from './Time';\nfunction App() {\n\n  bakeryData.forEach((item) => {\n    item.image = process.env.PUBLIC_URL + \"/\" + item.image;\n  });\n\n  const [toWatch, setToWatch] = useState([0])\n\n  const items = toWatch.map(item =>\n    <li key={item.id}>\n      {item.name} : {item.time} minutes\n    </li>\n  \n)\n\nconst totalTime =  toWatch.reduce((partialSum, item) => partialSum + item.time, 0)  \n\nconst addTime = (item) => {\n  const existingItem = toWatch.find(i => i.name === item.name)\n  if (existingItem) {\n    setToWatch(\n      toWatch.map(oldItem =>\n        oldItem === existingItem\n          ? { ...oldItem, count: existingItem.count + 1 }\n          : { ...oldItem }\n      )\n    )\n  } else {\n    setToWatch(oldTime => [...oldTime, item])\n  }\n}\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>Your Curated Movie Playlist</h1>\n      </div>\n      {/* TODO: personalize your bakery (if you want) */}\n\n      <div className=\"grid_container\">\n        <div className=\"bakery_items_container\">\n          {movieData.map((item, index) => ( // TODO: map bakeryData to BakeryItem components\n            < Time data={item} id={index} onAddToWatch={addTime} /> // replace with BakeryItem component\n          ))}\n        </div>\n\n        <div className=\"agg\">\n          <h2>Movies to Watch</h2>\n          <ul>{items}</ul>\n          <p>{totalTime} of movie to watch!</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,SAASC,IAAI,QAAQ,QAAQ;AAAC;AAC9B,SAASC,GAAG,GAAG;EAAA;EAEbC,UAAU,CAACC,OAAO,CAAEC,IAAI,IAAK;IAC3BA,IAAI,CAACC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,GAAG,GAAGJ,IAAI,CAACC,KAAK;EACxD,CAAC,CAAC;EAEF,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAE3C,MAAMa,KAAK,GAAGF,OAAO,CAACG,GAAG,CAACR,IAAI,iBAC5B;IAAA,WACGA,IAAI,CAACS,IAAI,SAAKT,IAAI,CAACU,IAAI;EAAA,GADjBV,IAAI,CAACW,EAAE;IAAA;IAAA;IAAA;EAAA,QAEX,CAER;EAED,MAAMC,SAAS,GAAIP,OAAO,CAACQ,MAAM,CAAC,CAACC,UAAU,EAAEd,IAAI,KAAKc,UAAU,GAAGd,IAAI,CAACU,IAAI,EAAE,CAAC,CAAC;EAElF,MAAMK,OAAO,GAAIf,IAAI,IAAK;IACxB,MAAMgB,YAAY,GAAGX,OAAO,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACT,IAAI,KAAKT,IAAI,CAACS,IAAI,CAAC;IAC5D,IAAIO,YAAY,EAAE;MAChBV,UAAU,CACRD,OAAO,CAACG,GAAG,CAACW,OAAO,IACjBA,OAAO,KAAKH,YAAY,GACpB;QAAE,GAAGG,OAAO;QAAEC,KAAK,EAAEJ,YAAY,CAACI,KAAK,GAAG;MAAE,CAAC,GAC7C;QAAE,GAAGD;MAAQ,CAAC,CACnB,CACF;IACH,CAAC,MAAM;MACLb,UAAU,CAACe,OAAO,IAAI,CAAC,GAAGA,OAAO,EAAErB,IAAI,CAAC,CAAC;IAC3C;EACF,CAAC;EAEC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACrB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAoC;MAAA;MAAA;MAAA;IAAA,QAChC,eAGN;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAK,SAAS,EAAC,wBAAwB;QAAA,UACpCL,SAAS,CAACa,GAAG,CAAC,CAACR,IAAI,EAAEsB,KAAK;QAAA;QAAO;QAChC,QAAE,IAAI;UAAC,IAAI,EAAEtB,IAAK;UAAC,EAAE,EAAEsB,KAAM;UAAC,YAAY,EAAEP;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG,CAAC;QACzD;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAK,SAAS,EAAC,KAAK;QAAA,wBAClB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB,eACxB;UAAA,UAAKR;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAChB;UAAA,WAAIK,SAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAtDQf,GAAG;AAAA,KAAHA,GAAG;AAwDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}